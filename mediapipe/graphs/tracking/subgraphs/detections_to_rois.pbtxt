# Calculate pose region of interest (ROI) from a detection

type: "KaresDetectionsToRois"

# Pose detections. (Detections)
input_stream: "DETECTIONS:detections"
# Input Image
input_stream: "IMAGE:image"

# ROIs according to the detection of input detections. (std:vector NormalizedRect)
output_stream: "ROIS:rois"

# Calculates size of the image.
node {
  calculator: "ImagePropertiesCalculator"
  input_stream: "IMAGE:image"
  output_stream: "SIZE:image_size"
}

# locate center of the human
node {
  calculator: "DetectionsToRectsCalculator"
  input_stream: "DETECTIONS:detections"
  input_stream: "IMAGE_SIZE:image_size"
  output_stream: "NORM_RECTS:raw_rois"
  options: {
    [mediapipe.DetectionsToRectsCalculatorOptions.ext] {
      # rotation_vector_start_keypoint_index: 0  
      # rotation_vector_end_keypoint_index: 1  
      # rotation_vector_target_angle_degrees: 90
    }
  }
}

# Scale to 1.25x to cover entire human body
node {
  calculator: "RectTransformationCalculator"
  input_stream: "NORM_RECTS:raw_rois"
  input_stream: "IMAGE_SIZE:image_size"
  output_stream: "rois"
  options: {
    [mediapipe.RectTransformationCalculatorOptions.ext] {
      scale_x: 1.25
      scale_y: 1.25
      square_long: true
    }
  }
}


# node {
#   calculator: "BeginLoopDetectionCalculator"
#   input_stream: "ITERABLE:detections"
#   input_stream: "CLONE:image_size"
#   output_stream: "ITEM:detection"
#   output_stream: "CLONE:image_size_for_detection_to_roi"
#   output_stream: "BATCH_END:detections_to_roi_timestamp"
# }

# # Converts pose detections into a rectangles based on centers and scale alignment
# # points.
# node {
#   calculator: "AlignmentPointsRectsCalculator"
#   input_stream: "DETECTION:detection"
#   input_stream: "IMAGE_SIZE:image_size_for_detection_to_roi"
#   output_stream: "NORM_RECT:raw_roi"
#   options: {
#     [mediapipe.DetectionsToRectsCalculatorOptions.ext] {
#       rotation_vector_start_keypoint_index: 0
#       rotation_vector_end_keypoint_index: 1
#       rotation_vector_target_angle_degrees: 90
#     }
#   }
# }

# # Expands pose rects with marging used during training.
# node {
#   calculator: "RectTransformationCalculator"
#   input_stream: "NORM_RECT:raw_roi"
#   input_stream: "IMAGE_SIZE:image_size_for_detection_to_roi"
#   output_stream: "roi"
#   options: {
#     [mediapipe.RectTransformationCalculatorOptions.ext] {
#       scale_x: 1.25
#       scale_y: 1.25
#       square_long: true
#     }
#   }
# }

# node {
#   calculator: "EndLoopNormalizedRectCalculator"
#   input_stream: "ITEM:roi"
#   input_stream: "BATCH_END:detections_to_roi_timestamp"
#   output_stream: "ITERABLE:rois"
# }